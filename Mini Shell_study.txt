Mini Shell_study

1.Shell Basics:

Shell reads user input.
Shell interprets and executes the command.
Shell displays output.

2.Basic Structure of a Shell:

Initialize a loop to continuously read user input.
Parse the input to separate the command and its arguments.
Execute the command using system calls.
Handle built-in commands (e.g., cd, exit).

3.Error Handling:
Handle errors

4.Implement Advanced Features:
Handle piping (|), redirection (>, <), etc


Topics:
-parsing, 
-argument checking, 
-execution, 
-redirection,
-piping,
-environment variables (ver melhor isto),
-built-in functions,
-signal handling.


Resumidinho:
1.Initialize the Shell:
Display a prompt.
Read user input*

2.Parse Input:
Split the input string into command and arguments.

3.Execute Command:
AINDA N PERCEI MT BEM ESTA PARTE; TA NO PROCESSO: ACEITO EXPLICACOES/SUGESTOES

4.Handle Built-in Commands:
Implement commands like cd and exit.

pormenorezinhos
*USER INPUT:
1. check that the input is valid and error-free
2. break down each individual tokens into an ordered list (lexical analyser**)
3. check if there are any errors in the syntax
4. parse them into an execution tree (Abstract Syntax Tree***)

**The Lexical Analyzer
Breaks the input string from the user to a series of tokens. 
Tokens could either be a character or a series of characters. Its also groups characters that are inside a single or double quotations.

***Syntax Tree Parser
Tree-like data structure that holds tokens and operations in order ofthe execution****

****Execution
After building the syntax tree, it is mbbb easier to traverse through out the tokens in order and make executions if necessary.
